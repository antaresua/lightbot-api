# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
    telegram_token: '%env(TELEGRAM_TOKEN)%'
    telegram_chat_id: '%env(TELEGRAM_CHAT_ID)%'
    api_auth_url: '%env(API_AUTH_URL)%'
    api_username: '%env(API_USERNAME)%'
    api_password: '%env(API_PASSWORD)%'
    api_status_url: '%env(API_STATUS_URL)%'
    api_change_status_url: '%env(API_CHANGE_STATUS_URL)%'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
    App\Service\TelegramService:
        arguments:
            $telegramToken: '%env(TELEGRAM_TOKEN)%'
            $chatId: '%env(TELEGRAM_CHAT_ID)%'
            $logger: '@logger'

    App\Service\LightScheduleService:
        arguments:
            $timeSlotRepository: '@App\Repository\TimeSlotRepository'

    App\EventListener\JWTCreatedListener:
        tags:
            - { name: 'kernel.event_listener', event: 'lexik_jwt_authentication.on_jwt_created', method: 'onJWTCreated' }

    React\Http\Browser:
        arguments:
            - '@React\EventLoop\LoopInterface'
        public: true

    React\EventLoop\LoopInterface:
        class: React\EventLoop\StreamSelectLoop
        public: true

    GuzzleHttp\Client: ~
    GuzzleHttp\ClientInterface: '@GuzzleHttp\Client'